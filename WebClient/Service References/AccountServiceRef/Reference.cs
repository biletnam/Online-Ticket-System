//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.AccountServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountServiceRef.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser1", ReplyAction="http://tempuri.org/IService1/addUser1Response")]
        bool addUser1(string firstName, string lastName, string email, string password, string rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser1", ReplyAction="http://tempuri.org/IService1/addUser1Response")]
        System.Threading.Tasks.Task<bool> addUser1Async(string firstName, string lastName, string email, string password, string rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser2", ReplyAction="http://tempuri.org/IService1/addUser2Response")]
        bool addUser2(string firstName, string lastName, string email, string password, string spot, string rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser2", ReplyAction="http://tempuri.org/IService1/addUser2Response")]
        System.Threading.Tasks.Task<bool> addUser2Async(string firstName, string lastName, string email, string password, string spot, string rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verifyUser", ReplyAction="http://tempuri.org/IService1/verifyUserResponse")]
        int verifyUser(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verifyUser", ReplyAction="http://tempuri.org/IService1/verifyUserResponse")]
        System.Threading.Tasks.Task<int> verifyUserAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebClient.AccountServiceRef.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebClient.AccountServiceRef.IService1>, WebClient.AccountServiceRef.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addUser1(string firstName, string lastName, string email, string password, string rule) {
            return base.Channel.addUser1(firstName, lastName, email, password, rule);
        }
        
        public System.Threading.Tasks.Task<bool> addUser1Async(string firstName, string lastName, string email, string password, string rule) {
            return base.Channel.addUser1Async(firstName, lastName, email, password, rule);
        }
        
        public bool addUser2(string firstName, string lastName, string email, string password, string spot, string rule) {
            return base.Channel.addUser2(firstName, lastName, email, password, spot, rule);
        }
        
        public System.Threading.Tasks.Task<bool> addUser2Async(string firstName, string lastName, string email, string password, string spot, string rule) {
            return base.Channel.addUser2Async(firstName, lastName, email, password, spot, rule);
        }
        
        public int verifyUser(string email, string password) {
            return base.Channel.verifyUser(email, password);
        }
        
        public System.Threading.Tasks.Task<int> verifyUserAsync(string email, string password) {
            return base.Channel.verifyUserAsync(email, password);
        }
    }
}
